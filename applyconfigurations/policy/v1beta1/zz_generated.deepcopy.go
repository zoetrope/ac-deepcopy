//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1beta1

import (
	applyconfigurationscorev1 "github.com/zoetrope/ac-deepcopy/applyconfigurations/core/v1"
	v1 "github.com/zoetrope/ac-deepcopy/applyconfigurations/meta/v1"
	corev1 "k8s.io/api/core/v1"
	policyv1beta1 "k8s.io/api/policy/v1beta1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	intstr "k8s.io/apimachinery/pkg/util/intstr"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedCSIDriverApplyConfiguration) DeepCopyInto(out *AllowedCSIDriverApplyConfiguration) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedCSIDriverApplyConfiguration.
func (in *AllowedCSIDriverApplyConfiguration) DeepCopy() *AllowedCSIDriverApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(AllowedCSIDriverApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedFlexVolumeApplyConfiguration) DeepCopyInto(out *AllowedFlexVolumeApplyConfiguration) {
	*out = *in
	if in.Driver != nil {
		in, out := &in.Driver, &out.Driver
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedFlexVolumeApplyConfiguration.
func (in *AllowedFlexVolumeApplyConfiguration) DeepCopy() *AllowedFlexVolumeApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(AllowedFlexVolumeApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedHostPathApplyConfiguration) DeepCopyInto(out *AllowedHostPathApplyConfiguration) {
	*out = *in
	if in.PathPrefix != nil {
		in, out := &in.PathPrefix, &out.PathPrefix
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedHostPathApplyConfiguration.
func (in *AllowedHostPathApplyConfiguration) DeepCopy() *AllowedHostPathApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(AllowedHostPathApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvictionApplyConfiguration) DeepCopyInto(out *EvictionApplyConfiguration) {
	*out = *in
	in.TypeMetaApplyConfiguration.DeepCopyInto(&out.TypeMetaApplyConfiguration)
	if in.ObjectMetaApplyConfiguration != nil {
		in, out := &in.ObjectMetaApplyConfiguration, &out.ObjectMetaApplyConfiguration
		*out = new(v1.ObjectMetaApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.DeleteOptions != nil {
		in, out := &in.DeleteOptions, &out.DeleteOptions
		*out = new(v1.DeleteOptionsApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvictionApplyConfiguration.
func (in *EvictionApplyConfiguration) DeepCopy() *EvictionApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(EvictionApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FSGroupStrategyOptionsApplyConfiguration) DeepCopyInto(out *FSGroupStrategyOptionsApplyConfiguration) {
	*out = *in
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(policyv1beta1.FSGroupStrategyType)
		**out = **in
	}
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]IDRangeApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FSGroupStrategyOptionsApplyConfiguration.
func (in *FSGroupStrategyOptionsApplyConfiguration) DeepCopy() *FSGroupStrategyOptionsApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(FSGroupStrategyOptionsApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostPortRangeApplyConfiguration) DeepCopyInto(out *HostPortRangeApplyConfiguration) {
	*out = *in
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(int32)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(int32)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostPortRangeApplyConfiguration.
func (in *HostPortRangeApplyConfiguration) DeepCopy() *HostPortRangeApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(HostPortRangeApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IDRangeApplyConfiguration) DeepCopyInto(out *IDRangeApplyConfiguration) {
	*out = *in
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(int64)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IDRangeApplyConfiguration.
func (in *IDRangeApplyConfiguration) DeepCopy() *IDRangeApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(IDRangeApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodDisruptionBudgetApplyConfiguration) DeepCopyInto(out *PodDisruptionBudgetApplyConfiguration) {
	*out = *in
	in.TypeMetaApplyConfiguration.DeepCopyInto(&out.TypeMetaApplyConfiguration)
	if in.ObjectMetaApplyConfiguration != nil {
		in, out := &in.ObjectMetaApplyConfiguration, &out.ObjectMetaApplyConfiguration
		*out = new(v1.ObjectMetaApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(PodDisruptionBudgetSpecApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(PodDisruptionBudgetStatusApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodDisruptionBudgetApplyConfiguration.
func (in *PodDisruptionBudgetApplyConfiguration) DeepCopy() *PodDisruptionBudgetApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PodDisruptionBudgetApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodDisruptionBudgetSpecApplyConfiguration) DeepCopyInto(out *PodDisruptionBudgetSpecApplyConfiguration) {
	*out = *in
	if in.MinAvailable != nil {
		in, out := &in.MinAvailable, &out.MinAvailable
		*out = new(intstr.IntOrString)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(v1.LabelSelectorApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxUnavailable != nil {
		in, out := &in.MaxUnavailable, &out.MaxUnavailable
		*out = new(intstr.IntOrString)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodDisruptionBudgetSpecApplyConfiguration.
func (in *PodDisruptionBudgetSpecApplyConfiguration) DeepCopy() *PodDisruptionBudgetSpecApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PodDisruptionBudgetSpecApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodDisruptionBudgetStatusApplyConfiguration) DeepCopyInto(out *PodDisruptionBudgetStatusApplyConfiguration) {
	*out = *in
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.DisruptedPods != nil {
		in, out := &in.DisruptedPods, &out.DisruptedPods
		*out = make(map[string]metav1.Time, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.DisruptionsAllowed != nil {
		in, out := &in.DisruptionsAllowed, &out.DisruptionsAllowed
		*out = new(int32)
		**out = **in
	}
	if in.CurrentHealthy != nil {
		in, out := &in.CurrentHealthy, &out.CurrentHealthy
		*out = new(int32)
		**out = **in
	}
	if in.DesiredHealthy != nil {
		in, out := &in.DesiredHealthy, &out.DesiredHealthy
		*out = new(int32)
		**out = **in
	}
	if in.ExpectedPods != nil {
		in, out := &in.ExpectedPods, &out.ExpectedPods
		*out = new(int32)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.ConditionApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodDisruptionBudgetStatusApplyConfiguration.
func (in *PodDisruptionBudgetStatusApplyConfiguration) DeepCopy() *PodDisruptionBudgetStatusApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PodDisruptionBudgetStatusApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodSecurityPolicyApplyConfiguration) DeepCopyInto(out *PodSecurityPolicyApplyConfiguration) {
	*out = *in
	in.TypeMetaApplyConfiguration.DeepCopyInto(&out.TypeMetaApplyConfiguration)
	if in.ObjectMetaApplyConfiguration != nil {
		in, out := &in.ObjectMetaApplyConfiguration, &out.ObjectMetaApplyConfiguration
		*out = new(v1.ObjectMetaApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(PodSecurityPolicySpecApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodSecurityPolicyApplyConfiguration.
func (in *PodSecurityPolicyApplyConfiguration) DeepCopy() *PodSecurityPolicyApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PodSecurityPolicyApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodSecurityPolicySpecApplyConfiguration) DeepCopyInto(out *PodSecurityPolicySpecApplyConfiguration) {
	*out = *in
	if in.Privileged != nil {
		in, out := &in.Privileged, &out.Privileged
		*out = new(bool)
		**out = **in
	}
	if in.DefaultAddCapabilities != nil {
		in, out := &in.DefaultAddCapabilities, &out.DefaultAddCapabilities
		*out = make([]corev1.Capability, len(*in))
		copy(*out, *in)
	}
	if in.RequiredDropCapabilities != nil {
		in, out := &in.RequiredDropCapabilities, &out.RequiredDropCapabilities
		*out = make([]corev1.Capability, len(*in))
		copy(*out, *in)
	}
	if in.AllowedCapabilities != nil {
		in, out := &in.AllowedCapabilities, &out.AllowedCapabilities
		*out = make([]corev1.Capability, len(*in))
		copy(*out, *in)
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]policyv1beta1.FSType, len(*in))
		copy(*out, *in)
	}
	if in.HostNetwork != nil {
		in, out := &in.HostNetwork, &out.HostNetwork
		*out = new(bool)
		**out = **in
	}
	if in.HostPorts != nil {
		in, out := &in.HostPorts, &out.HostPorts
		*out = make([]HostPortRangeApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostPID != nil {
		in, out := &in.HostPID, &out.HostPID
		*out = new(bool)
		**out = **in
	}
	if in.HostIPC != nil {
		in, out := &in.HostIPC, &out.HostIPC
		*out = new(bool)
		**out = **in
	}
	if in.SELinux != nil {
		in, out := &in.SELinux, &out.SELinux
		*out = new(SELinuxStrategyOptionsApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RunAsUser != nil {
		in, out := &in.RunAsUser, &out.RunAsUser
		*out = new(RunAsUserStrategyOptionsApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RunAsGroup != nil {
		in, out := &in.RunAsGroup, &out.RunAsGroup
		*out = new(RunAsGroupStrategyOptionsApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.SupplementalGroups != nil {
		in, out := &in.SupplementalGroups, &out.SupplementalGroups
		*out = new(SupplementalGroupsStrategyOptionsApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.FSGroup != nil {
		in, out := &in.FSGroup, &out.FSGroup
		*out = new(FSGroupStrategyOptionsApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ReadOnlyRootFilesystem != nil {
		in, out := &in.ReadOnlyRootFilesystem, &out.ReadOnlyRootFilesystem
		*out = new(bool)
		**out = **in
	}
	if in.DefaultAllowPrivilegeEscalation != nil {
		in, out := &in.DefaultAllowPrivilegeEscalation, &out.DefaultAllowPrivilegeEscalation
		*out = new(bool)
		**out = **in
	}
	if in.AllowPrivilegeEscalation != nil {
		in, out := &in.AllowPrivilegeEscalation, &out.AllowPrivilegeEscalation
		*out = new(bool)
		**out = **in
	}
	if in.AllowedHostPaths != nil {
		in, out := &in.AllowedHostPaths, &out.AllowedHostPaths
		*out = make([]AllowedHostPathApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AllowedFlexVolumes != nil {
		in, out := &in.AllowedFlexVolumes, &out.AllowedFlexVolumes
		*out = make([]AllowedFlexVolumeApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AllowedCSIDrivers != nil {
		in, out := &in.AllowedCSIDrivers, &out.AllowedCSIDrivers
		*out = make([]AllowedCSIDriverApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AllowedUnsafeSysctls != nil {
		in, out := &in.AllowedUnsafeSysctls, &out.AllowedUnsafeSysctls
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ForbiddenSysctls != nil {
		in, out := &in.ForbiddenSysctls, &out.ForbiddenSysctls
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AllowedProcMountTypes != nil {
		in, out := &in.AllowedProcMountTypes, &out.AllowedProcMountTypes
		*out = make([]corev1.ProcMountType, len(*in))
		copy(*out, *in)
	}
	if in.RuntimeClass != nil {
		in, out := &in.RuntimeClass, &out.RuntimeClass
		*out = new(RuntimeClassStrategyOptionsApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodSecurityPolicySpecApplyConfiguration.
func (in *PodSecurityPolicySpecApplyConfiguration) DeepCopy() *PodSecurityPolicySpecApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(PodSecurityPolicySpecApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunAsGroupStrategyOptionsApplyConfiguration) DeepCopyInto(out *RunAsGroupStrategyOptionsApplyConfiguration) {
	*out = *in
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(policyv1beta1.RunAsGroupStrategy)
		**out = **in
	}
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]IDRangeApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunAsGroupStrategyOptionsApplyConfiguration.
func (in *RunAsGroupStrategyOptionsApplyConfiguration) DeepCopy() *RunAsGroupStrategyOptionsApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(RunAsGroupStrategyOptionsApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunAsUserStrategyOptionsApplyConfiguration) DeepCopyInto(out *RunAsUserStrategyOptionsApplyConfiguration) {
	*out = *in
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(policyv1beta1.RunAsUserStrategy)
		**out = **in
	}
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]IDRangeApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunAsUserStrategyOptionsApplyConfiguration.
func (in *RunAsUserStrategyOptionsApplyConfiguration) DeepCopy() *RunAsUserStrategyOptionsApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(RunAsUserStrategyOptionsApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuntimeClassStrategyOptionsApplyConfiguration) DeepCopyInto(out *RuntimeClassStrategyOptionsApplyConfiguration) {
	*out = *in
	if in.AllowedRuntimeClassNames != nil {
		in, out := &in.AllowedRuntimeClassNames, &out.AllowedRuntimeClassNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DefaultRuntimeClassName != nil {
		in, out := &in.DefaultRuntimeClassName, &out.DefaultRuntimeClassName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuntimeClassStrategyOptionsApplyConfiguration.
func (in *RuntimeClassStrategyOptionsApplyConfiguration) DeepCopy() *RuntimeClassStrategyOptionsApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(RuntimeClassStrategyOptionsApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SELinuxStrategyOptionsApplyConfiguration) DeepCopyInto(out *SELinuxStrategyOptionsApplyConfiguration) {
	*out = *in
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(policyv1beta1.SELinuxStrategy)
		**out = **in
	}
	if in.SELinuxOptions != nil {
		in, out := &in.SELinuxOptions, &out.SELinuxOptions
		*out = new(applyconfigurationscorev1.SELinuxOptionsApplyConfiguration)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SELinuxStrategyOptionsApplyConfiguration.
func (in *SELinuxStrategyOptionsApplyConfiguration) DeepCopy() *SELinuxStrategyOptionsApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(SELinuxStrategyOptionsApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SupplementalGroupsStrategyOptionsApplyConfiguration) DeepCopyInto(out *SupplementalGroupsStrategyOptionsApplyConfiguration) {
	*out = *in
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(policyv1beta1.SupplementalGroupsStrategyType)
		**out = **in
	}
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]IDRangeApplyConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SupplementalGroupsStrategyOptionsApplyConfiguration.
func (in *SupplementalGroupsStrategyOptionsApplyConfiguration) DeepCopy() *SupplementalGroupsStrategyOptionsApplyConfiguration {
	if in == nil {
		return nil
	}
	out := new(SupplementalGroupsStrategyOptionsApplyConfiguration)
	in.DeepCopyInto(out)
	return out
}
